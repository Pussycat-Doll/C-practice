网络基础1：
	以覆盖范围进行划分：局域网/城域网/广域网  互联网/因特网(大的广域网)    
											  (组网方式)以太网/令牌环网
											  
	ip地址：IPV4版本----unit32_t类型的一个整数，用于在网络中唯一标识一台主机
			IPV6版本----128位(未能给够推广起来：因为不能够向前兼容IPV4版本)
			
			因此有了---动态地址分配技术(DHCP)--谁上网给谁分配IP地址
			但是同时上网的人也很多--不足以解决问题
			又有了--NAT网络地址转换技术--大家使用同一个IP地址上网
			在网络传输中的每一条数据中都必须包含有源IP地址和目的Ip地址
			端口PORT：uint16_t类型的整数--用于在一个主机上标识一个进程
			在网络传输中的每一条数据中都必须包含有源端口和目的端口
				端口号的范围为：64k 即0 ~ 65535  
				一个端口号只能被一个进程占用，但是一个进程可以使用多个端口
	协议：约定
	通信协议：通信双方在通信过程中数据格式的约定
	只有使用同一种标准网络通信协议才能实现网络互联
	五元组：源IP地址，目的IP地址，源端口，目的端口，协议
	协议分层： 按照每一层所提供的服务，以及所使用的接口，以及使用的协议，对网络通信环境进行分层，
	是网络通信更加简单
	
	OSI七层参考模型：开放网络互联模型
	应用层/表示层/会话层/运输层/网络层/链路层/物理层
	
	TCP/IP五层模型：
	应用层/负责应用程序之间的数据沟通 
			应用层的协议都是程序员自己定义的--eg:http协议/FTP协议/SSH协议/DNS协议
	运输层/负责应用程序之间的数据传输
			TCP/UDP协议
	网络层/负责地址管理与路由选择(选择合适的传输路径)
			IP协议
			路由器
	链路层/负责相邻设备的数据传输
			以太网协议-Ethernet 
			交换机
	物理层/负责光电信号的传输
			以太网协议
			集线器
			
	网络中通信传输中数据的封装与分用：
	封装：从上层到下层经过层层描述(结构体的封装)
	分用：从下层到上层经过层层解析(下层解析，选择上层解析协议)
	网络字节序：
	字节序：cpu从内存中对数据进行存储的顺序
	主机的字节序--大端字节序 和 小端字节序 
	大端字节序---低地址存高位
	小端字节序---低地址存低位
	如何判断一个主机字节序是大端还是小端？
		typedef union{int a;uchar b;}tmp; tmp a;a.a = 1;  
		如果 a.b == 1 为低地址存低位为小端
		否则则为 大端
	决定一个主机字节序是大端还是小端的关键在于 --- cpu架构
		eg:X86--小端   MIPS--大端 
	主机字节序对网络通信的影响：
		不同主机字节序的两台主机进行通信的时候，有可能造成数据二义
		因此，做出规定：在网络通信中，统一使用大端字节序作为网络字
		节序进行通信
	主机字节序会对哪些数据造成影响？
		对存储时多字节(大于一个字节)的类型的数据：short/int/long/float/double
		但是 char不受影响 --char str[64]
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	